<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- 缓存管理器 使用Ehcache实现 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManager"  ref="ehCacheManager"/>
    </bean>
    <bean id="ehCacheManager" class ="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml" />
		<property name="shared" value="true"></property>
	</bean>
    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="com.yeqiu.sys.user.credentials.RetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="cacheManager"/>
        <!-- 指定hash算法-->
        <property name="hashAlgorithmName" value="SHA-1"/>
        <!-- 指定散列次数-->
        <property name="hashIterations" value="5"/>
        <!-- 指定Hash散列值使用Hex加密存储。true:表明hash散列值用用hex存储。;false:表明hash散列值用用Base64-encoded存储。 -->
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>

    <!-- Realm实现,安全数据源 -->
    <bean id="userRealm" class="com.yeqiu.sys.user.realm.UserRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>

    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话Cookie模板 -->
    <bean id="shiroSessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg  value="sid"/>
        <property name="path" value="/"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="180000"/>
        <property name="name" value="shiroUserId"/>
    </bean>

    <!-- 会话DAO -->
    <bean id="sessionDAO" class="com.yeqiu.sys.user.dao.ManageCacheSessionDao">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
    	<!--每5分钟验证 -->
        <property name="sessionValidationInterval" value="300000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- 会话超时时间，单位：毫秒-->
        <property name="globalSessionTimeout" value="1800000"/>
        <!-- 会话过期自动删除 -->
        <property name="deleteInvalidSessions" value="true"/>
        <!-- 定时清理失效会话, 清理用户直接关闭浏览器造成的孤立会话  -->
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        
        <property name="sessionDAO" ref="sessionDAO"/>
        
        <property name="sessionIdCookieEnabled" value="true"/>
        
        <property name="sessionIdCookie" ref="shiroSessionIdCookie"/>
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- 基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="loginUrl" value="/login.html"/>
    </bean>

    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
       <!-- 权限管理器 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 登录地址 -->
        <property name="loginUrl" value="/web/login.html"/>
        <property name="filters">           
            <map>
            	 <entry key="authc" value-ref="formAuthenticationFilter"/>          
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                 <!-- anon无权限访问请求，此处是登录页面和登录请求 -->  
                /web/login.do = anon
                /web/login.html = anon
                    <!-- 退出登录 -->
               /logout=logout
               /web/login_out.do = anon
                <!--拦截非静态资源的所有请求-->    
               <!--  /** = authc   -->
               /web/** = user        
            </value>
        </property>
    </bean>

    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
</beans>