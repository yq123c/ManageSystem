package com.five.managesystem.user.controller;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.ResourceBundle;
import javax.servlet.http.HttpServletRequest;
import org.hibernate.validator.constraints.NotBlank;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import com.five.managesystem.common.util.CommonUtils;
import com.five.managesystem.common.util.LocaleUtils;
import com.five.managesystem.common.util.ReturnResult;
import com.five.managesystem.user.entity.PagingVo;
import com.five.managesystem.user.entity.UserVo;
import com.five.managesystem.user.exception.AccountExistException;
import com.five.managesystem.user.service.UserService;

@Controller
@RequestMapping("/web")
public class UserController {
	@Autowired UserService userService;
	
	/**
	 * 添加用户
	 * @param user
	 * @param request
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="addUser",method=RequestMethod.POST)
	public ReturnResult addUser(@Validated UserVo user,BindingResult binding,HttpServletRequest request){
		ReturnResult result = new ReturnResult();
		ResourceBundle bundle = LocaleUtils.getResourceBundle(request);
		if (binding.hasFieldErrors()){
			result.setState(1);
			result.setMessages(CommonUtils.getErrors(binding));
			return result;
		}
		
		try{
			if (userService.addUser(user)  > 0){
				result.setState(0);
				result.setMessages(bundle.getString("success"));
			}else{
				result.setState(1);
				result.setMessages(bundle.getString("fail"));
			}
		}catch(AccountExistException e){
			result.setState(1);
			result.setMessages(bundle.getString("UserVo.loginNameExist"));
			return result;
		}
		
		return result;
	}
	
	
	@ResponseBody
	@RequestMapping(value="deleteById",method=RequestMethod.POST)
	public ReturnResult deleteById(@NotBlank String id,HttpServletRequest request){
		ReturnResult result = new ReturnResult();
		ResourceBundle bundle = LocaleUtils.getResourceBundle(request);
		if (userService.deleteById(id) > 0){
			result.setState(0);
			result.setMessages(bundle.getString("success"));
			return result;
		}
		
		result.setState(1);
		result.setMessages(bundle.getString("fail"));
		return result;
	}
	
	
	@ResponseBody
	@RequestMapping(value="updateUser",method=RequestMethod.POST)
	public ReturnResult updateUser(@Validated UserVo user,BindingResult binding,HttpServletRequest request){
		ReturnResult result = new ReturnResult();
		
		if (binding.hasFieldErrors()){
			result.setState(1);
			result.setMessages(CommonUtils.getErrors(binding));
			return result;
		}
		ResourceBundle bundle = LocaleUtils.getResourceBundle(request);
		
		try{
			Map<?,?> newData = userService.updateUserById(user,"");
			
			if (newData != null){
				
				result.setState(0);
				result.setData(newData);
				result.setMessages(bundle.getString("success"));
				return result;
			}else{
				result.setState(2);
				result.setMessages(bundle.getString("fail"));
				return result;
			}
		}catch(AccountExistException e){
			result.setState(2);
			result.setMessages(bundle.getString("UserVo.loginNameExist"));
			return result;
		}
		


	}
	
	@ResponseBody
	@RequestMapping(value="findUserType")
	public List<Map<String,String>> findUserType(){
		return userService.findUserType();
	}
	
	@ResponseBody
	@RequestMapping(value="findUser")
	public Map<String,Object> findUser(PagingVo params){
		Map<String,Object> result = new HashMap<>();
		params.setTotal(userService.findTotalUsers(params));
		result.put("rows", userService.findUser(params));
		result.put("total",params.getTotal());
		return result;
	}
	
	
}
