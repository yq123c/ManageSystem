package com.five.managesystem.user.dao;

import java.util.List;
import java.util.Map;
import java.util.Set;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import com.five.managesystem.user.entity.PagingVo;
import com.five.managesystem.user.entity.User;
import com.five.managesystem.user.entity.UserVo;



/**
 * @author 陆昌
 * @time 2019年4月25日上午9:22:35
 * 说明：
 */
@Repository
public interface UserDao {
		/**
		 * 通过登录名查找用户信息（登录名不可重复）
		 * @param username 登录名
		 * @return
		 */
	    Map<String,String> findByUsername(@Param("loginName")String username);
	    /**
	     * 通过用户id查找用户信息
	     * @param id 用户id
	     * @return
	     */
	    Map<String,String> findById(String id);
	    
	    /**
	     * 查询用户
	     * @param params 请求参数 
	     * @return
	     */
	    List<Map<Object,Object>> findUser(PagingVo params);
	    
	    /**
	     * 查用户数量
	     * @return
	     */
	    int findTotalUsers(PagingVo params);
	    
	    /**
	     * 按id更新用户
	     * @return
	     */
	    int updateUserById(UserVo user);
	    /**
	     * 通过登录名查找用户角色
	     * @param username 用户登录名
	     * @return 角色列表
	     */
	    List<Map<String,String>> findRoles(String username);
	    /**
	     * 通过角色id查找用户权限
	     * @param roleId 角色id
	     * @return
	     */
	    List<Map<String,String>> findPermissions(String roleId);
	    
	    /**
	     * 添加用户
	     * @param user
	     * @return
	     */
	    int addUser(@Param("user")UserVo user);
	    
	    /**
	     * 按id删除任务
	     * @param id
	     * @return
	     */
	    int deleteById(String id);
	    
	    List<Map<String,String>> findUserType();
	    
	    /**
	     * 查询字典表(sys_dict) type字段为用户类型(sys_user_type)
	     * 按value 查 label
	     * @param value
	     * @return
	     */
	    String findLabelByValue(@Param("value")String value);
	    /**
	     * 根据用户id获取用户的角色id列表
	     * @param id 用户id
	     * @return 角色id列表
	     */
	    public Set<String> getRolesByUserId(String id);
	    /**
	     *  添加用户角色信息
	     * @param userId 用户id
	     * @param roleId 角色id
	     * @return 生效的行数
	     */
	    public Integer addUserRoleInfo(@Param("userId")String userId,@Param("roleId")String roleId);
	    /**
	     *  删除用户角色信息
	     * @param userId 用户id
	     * @param roleId 角色id
	     * @return 受影响的行数
	     */
	    public Integer deleteUserRoleInfo(@Param("userId")String userId,@Param("roleId")String roleId);
}
