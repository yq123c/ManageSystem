<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
  
   	<!-- 实例化properties对象，读取配置文件 -->
   <util:properties id="dbconf" location="classpath:db.properties"> </util:properties>
  
     <!-- 配置连接池  
     	Spring 表达式 #{}
     -->
     <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
     	  <property name="driverClassName" value="#{dbconf.driver}"></property>
     	  <property name="url" value="#{ dbconf.url}"></property>
     	  <property name="username" value="#{dbconf.username}"></property>
     	  <property name="password" value="#{ dbconf.password}"></property>
     </bean>
     
     <!-- ssm整合  -->
     
     <!-- 持久层扫描（扫持久层的接口）  -->
     <bean id="scannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
     	<property name="basePackage" value="com.five.*.*.dao"></property>
     </bean>
     <!-- SqlSessionFactoryBean的初始化 -->
     <bean id="factoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
     	<!-- 依赖注入数据源 -->
     	<property name="dataSource" ref="dataSource" ></property>
     	<!-- 读取mybatis配置文件，注意：该配置一定要在读取映射文件之前配置，否则无效  -->
     	<property name="configLocation" value="classpath:mybatis-config.xml"></property>
     	<!-- 读取编写SQL语句的映射文件  -->
     	<property name="mapperLocations"  value="classpath:com/five/*/*/sql/*.xml"></property>    	
     </bean>
     <!-- 事务的自动注解  -->
     <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
     	<property name="dataSource" ref="dataSource"> </property>
     </bean>
   
     <tx:annotation-driven transaction-manager="transactionManager"/>
   	
</beans>