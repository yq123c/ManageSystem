<?xml version="1.0" encoding="UTF-8"?>
	<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" 
		"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.yeqiu.sys.permission.dao.RoleDao">
<!--  获取所有的角色列表 -->
<!-- public List<Map<String,Object>> getRoleList(int limit,int offset,String sort,String sortOrder) -->
<select id="getRoleList" resultType="map">
select * from sys_role t 
    <if test="sort != null">
    	order by ${sort} <if test="sortOrder != null">${sortOrder}</if>   
    </if>
    <if test="limit!=null and offset!=null">
    limit ${offset},${limit}
    </if>
</select>
<!-- 获取角色记录总数 -->
<!-- public Integer getRecordCountOfRoles() -->
<select id="getRecordCountOfRoles" resultType="int">
	select count(t.id) total from sys_role t
</select>
<!-- 添加角色 -->
<!-- public Integer addRole( Map<String,String> roleInfo) -->
<insert id="addRole" parameterType="map">
insert into 
    sys_role 
values(
    #{roleInfo.id,jdbcType=VARCHAR},
    #{roleInfo.role_name,jdbcType=VARCHAR},
    #{roleInfo.description,jdbcType=VARCHAR},
    #{roleInfo.createPersion,jdbcType=VARCHAR},
    now(),
    #{roleInfo.createPersion,jdbcType=VARCHAR},
    now()
)
</insert>
<!--  通过角色id删除角色 -->
<!-- public Integer deleteRole(String id) -->
<delete id="deleteRole">
delete t
	from sys_role t
where 
	t.id = #{id,jdbcType=VARCHAR}
</delete>
<!-- 获取操作权限列表 -->
<!-- public List<Map<String,Object>> getOperationList(String id) -->
<select id="getOperationList" resultType="map">
select t.id,
       t.parent_id,
       t.parent_ids,
       t.name,
       t.permission,
       t.description,
       t.create_person,
       t.create_time,
       (select count(o.id) from sys_operation o where o.parent_id=t.id)isParent   
  from sys_operation t
where t.parent_id = #{id,jdbcType=VARCHAR}
</select>
<!-- 添加操作权限 -->
<!-- public Integer addOperation( @Param("operationInfo") Map<String,String> operationInfo ) -->
<insert id="addOperation" parameterType="map">
insert into 
    sys_operation 
values(
    #{operationInfo.id,jdbcType=VARCHAR},
    #{operationInfo.parent_id,jdbcType=VARCHAR},
    #{operationInfo.parent_id,jdbcType=VARCHAR},
    #{operationInfo.name,jdbcType=VARCHAR},
    #{operationInfo.permission,jdbcType=VARCHAR},
    #{operationInfo.description,jdbcType=VARCHAR},
    #{operationInfo.login_name,jdbcType=VARCHAR},
    now(),
     #{operationInfo.login_name,jdbcType=VARCHAR},
    now()
)
</insert>
<!--  根据操作ID删除操作记录 -->
<!-- public Integer deleteOperation(String id) -->
<delete id="deleteOperation">
delete t
	from sys_operation t
where
	t.id=#{id,jdbcType=VARCHAR}
</delete>
<!--  根据角色id获取授予该角色的权限id -->
<!-- public List<Map<String,String>> getRolePermission(String id) -->
<select id="getRolePermission"  resultType="map">
select 
  * 
from 
  sys_role_opration t
where 
	t.role_id = #{id,jdbcType=VARCHAR}
</select>
<!-- 添加授权信息 -->
<!-- public Integer addAuthorizeInfo(@Param("authorizeInfo")Map<String,String > authorizeInfo) -->
<insert id="addAuthorizeInfo" parameterType="map">
insert into
	sys_role_opration 
values(
	#{authorizeInfo.ROLE_ID,jdbcType=VARCHAR},
	#{authorizeInfo.OPERATION_ID,jdbcType=VARCHAR}
)
</insert>
<!-- 删除授权信息 -->
<!-- public Integer deleteAuthorizeInfo(@Param("authorizeInfo")Map<String,String > authorizeInfo) -->
<delete id="deleteAuthorizeInfo" parameterType="map">
delete t
	from sys_role_opration t
where
	t.role_id = #{authorizeInfo.ROLE_ID,jdbcType=VARCHAR}
	and 
	t.operation_id =#{authorizeInfo.OPERATION_ID,jdbcType=VARCHAR}
</delete>

<!-- 按用户ID查角色 -->
<select id="findRolesByUserId" resultType="map" parameterType="String">
select 
 id,name,description,create_person,create_time,modify_person,modify_time
from 
       sys_role r 
where 
	   r.id in (
	   		select ur.role_id 
	   		from sys_users u 
	   		join SYS_USER_ROLE ur 
	   		on u.id = ur.user_id 
	   		where u.id=#{id,jdbcType=VARCHAR}
	   		)

</select>

</mapper>